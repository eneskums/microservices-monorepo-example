services:

  # MySQL Container
  mysql:
    image: mysql:8.3.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/data:/var/lib/mysql
    networks:
      - microservices-network
    restart: unless-stopped

  # Config Service
  config-service:
    image: config-service:latest
    container_name: config-service
    build:
      context: ./config-service
    ports:
      - "8888:8888"
    environment:
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    networks:
      - microservices-network
    restart: unless-stopped

  # Discovery Service
  discovery-service:
    image: discovery-service:latest
    container_name: discovery-service
    build:
      context: ./discovery-service
    ports:
      - "8761:8761"
    depends_on:
      - config-service
    environment:
      - CONFIG_SERVER_URL=http://config-service:8888
    networks:
      - microservices-network
    restart: unless-stopped

  # Gateway Service
  gateway-service:
    image: gateway-service:latest
    container_name: gateway-service
    build:
      context: ./gateway-service
    ports:
      - "8089:8089"
    depends_on:
      - discovery-service
    environment:
      - CONFIG_SERVER_URL=http://config-service:8888
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    networks:
      - microservices-network
    restart: unless-stopped

  # Customer Service
  customer-service:
    image: customer-service:latest
    container_name: customer-service
    build:
      context: ./customer-service
    ports:
      - "8082:8082"
    depends_on:
      - mysql
      - discovery-service
      - config-service
    environment:
      - CUSTOMER_SERVICE_MYSQL_URL=jdbc:mysql://mysql:3306/customers
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=password
      - CONFIG_SERVER_URL=http://config-service:8888
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    networks:
      - microservices-network
    restart: unless-stopped

  # Order Service
  order-service:
    image: order-service:latest
    container_name: order-service
    build:
      context: ./order-service
    ports:
      - "8084:8084"
    depends_on:
      - mysql
      - discovery-service
      - config-service
    environment:
      - ORDER_SERVICE_MYSQL_URL=jdbc:mysql://mysql:3306/orders
      - MYSQL_USERNAME=root
      - MYSQL_PASSWORD=password
      - CONFIG_SERVER_URL=http://config-service:8888
      - DISCOVERY_SERVICE_URL=http://discovery-service:8761/eureka/
    networks:
      - microservices-network
    restart: unless-stopped

networks:
  microservices-network:
    driver: bridge
